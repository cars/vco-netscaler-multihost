<?xml version="1.0" encoding="UTF-8"?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="056588c6-06e9-4ed1-81c9-a3f4818e9557" version="0.0.12" api-version="3.1.0" allowed-operations="vef" restartMode="1" resumeFromFailedMode="0">
    <display-name>Add Virtual Server to Netscaler</display-name>

    <position x="100.0" y="50.0"/>

    <input>
        <param name="PasswordID" type="String">
            <description>PasswordID</description>
        </param>
        <param name="vserverName" type="string"/>
        <param name="vserverProtocol" type="string"/>
        <param name="vserverIP" type="string"/>
        <param name="vserverPort" type="string"/>
        <param name="vserverLBMethod" type="string"/>
        <param name="vserverPersistence" type="string"/>
        <param name="vserverComment" type="string"/>
        <param name="sslCertKey" type="string"/>
        <param name="doSSL" type="boolean">
            <description>Assign an SSL Certificate</description>
        </param>
        <param name="nsRestHostName" type="string"/>
    </input>

    <output>
        <param name="sslBindingContentLength" type="Number">
            <description>Response content length</description>
        </param>
        <param name="sslBindingHeaders" type="Properties">
            <description>Response headers</description>
        </param>
        <param name="sslBindingContentAsString" type="String">
            <description>Response content as string</description>
        </param>
        <param name="addServerStatusCode" type="Number">
            <description>Response status code</description>
        </param>
        <param name="addServerContentLength" type="Number">
            <description>Response content length</description>
        </param>
        <param name="addServerHeaders" type="Properties">
            <description>Response headers</description>
        </param>
        <param name="addServerContentAsString" type="String">
            <description>Response content as string</description>
        </param>
        <param name="sslBindingStatusCode" type="Number">
            <description>Response status code</description>
        </param>
    </output>

    <attrib name="password" type="string" read-only="false">
        <value encoded="n"/>
    </attrib>
    <attrib name="username" type="string" read-only="false">
        <value encoded="n"/>
    </attrib>
    <attrib name="content" type="String" read-only="false">
        <value encoded="n"/>
        <description>content</description>
    </attrib>

    <workflow-item name="item0" type="end" end-mode="0">
        <position x="724.5" y="109.04545454545453"/>
    </workflow-item>

    <workflow-item name="item1" out-name="item4" type="link" linked-workflow-id="f35412f6-e8ca-489f-929d-54b05ea0370b">
        <display-name>Get Username and Password from PasswordState</display-name>

        <in-binding>
            <bind name="PasswordID" type="String" export-name="PasswordID">
                <description>PasswordID</description>
            </bind>
        </in-binding>

        <out-binding>
            <bind name="statusCode" type="Number" export-name="sslBindingStatusCode">
                <description>Response status code</description>
            </bind>
            <bind name="password" type="string" export-name="password"/>
            <bind name="username" type="string" export-name="username"/>
        </out-binding>

        <description>
Workflow that given a particulat PasswordID from password state will look up the password and username associated with the ID for use in workflows...
        </description>

        <position x="204.5" y="55.40909090909091"/>
    </workflow-item>

    <workflow-item name="item3" out-name="item5" type="condition" alt-out-name="item0" comparator="0">
        <display-name>Add SSL Cert</display-name>

        <script encoded="false">
//Generated by the system, cannot be edited
return (doSSL == true) ;
        </script>

        <in-binding>
            <bind name="doSSL" type="boolean" export-name="doSSL"/>
        </in-binding>
        <condition name="doSSL" type="boolean" comparator="0" label="null">false</condition>

        <position x="624.5" y="45.40909090909091"/>
    </workflow-item>

    <workflow-item name="item5" out-name="item0" type="link" linked-workflow-id="af095502-c172-4207-9dc8-4f0027811354">
        <display-name>Netscaler - Bind SSL Cert to vServer</display-name>

        <in-binding>
            <bind name="nsPassword" type="string" export-name="password"/>
            <bind name="sslCertKey" type="string" export-name="sslCertKey"/>
            <bind name="vserverName" type="string" export-name="vserverName"/>
            <bind name="nsUsername" type="string" export-name="username"/>
        </in-binding>

        <out-binding>
            <bind name="statusCode" type="Number" export-name="sslBindingStatusCode">
                <description>Response status code</description>
            </bind>
            <bind name="contentLength" type="Number" export-name="sslBindingContentLength">
                <description>Response content length</description>
            </bind>
            <bind name="headers" type="Properties" export-name="sslBindingHeaders">
                <description>Response headers</description>
            </bind>
            <bind name="contentAsString" type="String" export-name="sslBindingContentAsString">
                <description>Response content as string</description>
            </bind>
        </out-binding>

        <description>Autogenerated workflow. Bind an existing SSL certificate on the Netscaler to a Virtual Server</description>

        <position x="764.5" y="55.40909090909091"/>
    </workflow-item>

    <workflow-item name="item2" out-name="item3" type="link" linked-workflow-id="e4316507-0988-4aca-9b31-600193b0cefa">
        <display-name>NetScaler: Vserver Add</display-name>

        <in-binding>
            <bind name="content" type="String" export-name="content">
                <description>content</description>
            </bind>
            <bind name="nsRestHostName" type="string" export-name="nsRestHostName"/>
            <bind name="nsUserName" type="string" export-name="username"/>
            <bind name="nsUserPassword" type="string" export-name="password"/>
        </in-binding>

        <out-binding>
            <bind name="statusCode" type="Number" export-name="addServerStatusCode">
                <description>Response status code</description>
            </bind>
            <bind name="contentLength" type="Number" export-name="addServerContentLength">
                <description>Response content length</description>
            </bind>
            <bind name="headers" type="Properties" export-name="addServerHeaders">
                <description>Response headers</description>
            </bind>
            <bind name="contentAsString" type="String" export-name="addServerContentAsString">
                <description>Response content as string</description>
            </bind>
        </out-binding>

        <description>Autogenerated workflow.</description>

        <position x="484.5" y="55.40909090909091"/>
    </workflow-item>

    <workflow-item name="item4" out-name="item2" type="task">
        <display-name>Build REST content</display-name>

        <script encoded="false">
//prepare content of the request...
content = '{\n "lbvserver": {\n "name": "' + vserverName + '",\n"servicetype": "'+ vserverProtocol + '",\n';
content += '"ipv46": "'+vserverIP + '",\n "port": "'+vserverPort+'"';
if (vserverComment !== null  &amp;&amp; vserverComment.length &gt;= 1){ 
	content += ',\n"comment": "'+ vserverComment + '"';
}

if (vserverLBMethod !== null  &amp;&amp; vserverLBMethod.length &gt;=1){ 
	content += ',\n"lbmethod": "'+ vserverLBMethod + '"';
}

if (vserverPersistence !== null &amp;&amp; vserverPersistence.length &gt;=1 ){ 
	content += ',\n"persistencetype": "'+ vserverPersistence+ '"';
}


content += '}}';

System.log("content: " + content);
        </script>

        <in-binding>
            <bind name="vserverName" type="string" export-name="vserverName"/>
            <bind name="vserverProtocol" type="string" export-name="vserverProtocol"/>
            <bind name="vserverIP" type="string" export-name="vserverIP"/>
            <bind name="vserverPort" type="string" export-name="vserverPort"/>
            <bind name="vserverLBMethod" type="string" export-name="vserverLBMethod"/>
            <bind name="vserverPersistence" type="string" export-name="vserverPersistence"/>
            <bind name="vserverComment" type="string" export-name="vserverComment"/>
        </in-binding>

        <out-binding>
            <bind name="content" type="String" export-name="content">
                <description>content</description>
            </bind>
        </out-binding>

        <description>Scripting component to build the JSON content for the REST operation.</description>

        <position x="344.5" y="55.40909090909091"/>
    </workflow-item>

    <presentation>
        <p-step>
            <title>New step</title>
            <p-group>
                <title>VServer Properties</title>
                <desc>
VServer Properties
                </desc>
                <p-param name="vserverName">
                    <desc>vserverName</desc>
                </p-param>
                <p-param name="vserverProtocol">
                    <desc>vserverProtocol</desc>
                </p-param>
                <p-param name="vserverIP">
                    <desc>vserverIP</desc>
                </p-param>
                <p-param name="vserverPort">
                    <desc>vserverPort</desc>
                </p-param>
                <p-param name="vserverLBMethod">
                    <desc>vserverLBMethod</desc>
                    <p-qual kind="static" name="defaultValue" type="string">ROUNDROBIN</p-qual>
                </p-param>
                <p-param name="vserverPersistence">
                    <desc>vserverPersistence</desc>
                </p-param>
                <p-param name="vserverComment">
                    <desc>vserverComment</desc>
                </p-param>
            </p-group>
            <p-group>
                <title>PasswordID properties</title>
                <p-param name="PasswordID">
                    <desc>PasswordID</desc>
                </p-param>
            </p-group>
        </p-step>
        <p-step>
            <title>SSL Info</title>
            <p-group>
                <title>SSL Certificate Information</title>
                <p-param name="doSSL">
                    <desc>Assign an SSL Certificate</desc>
                </p-param>
                <p-param name="sslCertKey">
                    <desc>sslCertKey</desc>
                </p-param>
            </p-group>
        </p-step>
        <p-param name="nsRestHostName">
            <desc>nsRestHostName</desc>
        </p-param>
    </presentation>
</workflow>
